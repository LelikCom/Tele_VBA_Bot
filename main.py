"""
main.py

–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram-–±–æ—Ç–∞ –Ω–∞ python-telegram-bot.
"""

import logging
import asyncio
from os import getenv

from db.initialize_db import create_tables, populate_initial_data
from dotenv import load_dotenv
from telegram.ext import Application
from bot.core.register_handlers import register_all_handlers
from bot.core.register_commands import setup_commands
from bot.core.utils.setup_logger import setup_logger
from bot.core.init_app import build_application
from bot.core.role_monitor import role_monitor


async def main():
    # üîß –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    # üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
    setup_logger()

    # üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    token = getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        raise ValueError("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ.")

    # üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
    create_tables()
    populate_initial_data()

    # ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Telegram Application —Å post_init
    application: Application = build_application(post_init=setup_commands)

    # üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
    register_all_handlers(application)

    # üõ†Ô∏è –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–æ–ª–µ–π
    asyncio.create_task(role_monitor(application.bot))

    # üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ polling.")
    await application.run_polling()


if __name__ == "__main__":
    import nest_asyncio
    nest_asyncio.apply()
    asyncio.get_event_loop().run_until_complete(main())

